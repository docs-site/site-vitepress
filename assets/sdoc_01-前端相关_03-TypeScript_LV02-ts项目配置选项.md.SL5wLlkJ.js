import{_ as a,c as t,o as e,am as i}from"./chunks/framework.CEE9IokS.js";const u=JSON.parse('{"title":"LV02-ts项目配置选项","description":"","frontmatter":{"title":"LV02-ts项目配置选项","date":"2025-06-19T10:45:13.000Z","icon":"famicons:logo-markdown","index":true,"tags":null,"categories":null},"headers":[],"relativePath":"sdoc/01-前端相关/03-TypeScript/LV02-ts项目配置选项.md","filePath":"sdoc/01-前端相关/03-TypeScript/LV02-ts项目配置选项.md","lastUpdated":1753109901000}'),n={name:"sdoc/01-前端相关/03-TypeScript/LV02-ts项目配置选项.md"};function p(r,s,l,o,c,d){return e(),t("div",null,s[0]||(s[0]=[i(`<p>来详细了解下ts项目配置选项。</p><h2 id="一、target" tabindex="-1">一、target <a class="header-anchor" href="#一、target" aria-label="Permalink to &quot;一、target&quot;">​</a></h2><h3 id="_1-target选项" tabindex="-1">1. target选项 <a class="header-anchor" href="#_1-target选项" aria-label="Permalink to &quot;1. target选项&quot;">​</a></h3><p>target” 选项用于指定 TypeScript 编译后的JavaScript代码的目标版本。通常情况下，我们会将目标版本设置为所要支持的最低版本。TypeScript 提供了多个目标版本供选择，包括 “ES3″、”ES5″、”ES2015″、”ES2016″等。如果不指定目标版本，则 TypeScript 编译器默认将目标版本设置为 “ES3″。</p><p>下面是一个示例的 tsconfig.json 文件，其中指定了目标版本为 “ES2016″：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ES2016&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在此示例中，TypeScript 编译器将会根据 ES2016 标准来编译 TypeScript 代码，生成相应的 JavaScript 代码。</p><blockquote><p>参考资料：</p><p><a href="https://geek-docs.com/typescript/typescript-questions/921_typescript_understanding_target_and_module_in_tsconfig.html" target="_blank" rel="noreferrer">TypeScript 理解 tsconfig 中的 “target” 和 “module”|极客教程</a></p></blockquote>`,8)]))}const _=a(n,[["render",p]]);export{u as __pageData,_ as default};
